{"version":3,"sources":["helpers/getRepoData.js","components/RepoList.js","components/RepositoriesScreen.js","hooks/useFetchRepoData.js","helpers/getUserData.js","components/GridItem.js","components/UserScreen.js","hooks/useFetchUserData.js","ui/Navbar.js","routers/AppRouter.js","GithubApp.js","index.js"],"names":["getRepoData","a","fetch","resp","json","data","repositories","map","repo","id","name","RepoList","className","RepositoriesScreen","useState","loading","state","setState","useEffect","then","useFetchRepoData","getUserData","GridItem","login","avatar_url","html_url","public_repos","type","following","src","alt","activeClassName","exact","to","UserScreen","user","useFetchUserData","Navbar","AppRouter","path","component","GithubApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7396a2d.chunk.js","sourcesContent":["export const getRepoData = async () => {\r\n    const url = `https://api.github.com/users/fercho1/repos`;\r\n    const resp = await fetch(url);\r\n    const data = await resp.json();\r\n\r\n    const repositories = data.map(repo => {\r\n        return {\r\n            id: repo.id,\r\n            name: repo.name,\r\n        }\r\n    })\r\n    return repositories;\r\n}","import React from 'react'\r\n\r\nexport const RepoList = ({ name }) => {\r\n    return (\r\n\r\n        \r\n        <div className=\"container mt-5\">\r\n            \r\n            <div className=\"row\">\r\n                \r\n                <div className=\"col\">\r\n                <h3> {name} </h3>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}","import React from 'react'\r\nimport { useFetchRepoData } from '../hooks/useFetchRepoData';\r\nimport { RepoList } from './RepoList';\r\n\r\nexport const RepositoriesScreen = () => {\r\n\r\n    const { data, loading } = useFetchRepoData();\r\n\r\n\r\n    return (\r\n        <>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n\r\n            <div className=\"card-grid\">\r\n\r\n            {\r\n                    data.map(repo => (\r\n                        <RepoList\r\n                            key={repo.id}\r\n                            {...repo}\r\n                        />\r\n                    ))\r\n                }\r\n\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getRepoData } from \"../helpers/getRepoData\";\r\n\r\n\r\nexport const useFetchRepoData = () => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getRepoData()\r\n            .then(repo => {\r\n\r\n\r\n\r\n                setState({\r\n                    data: repo,\r\n                    loading: false\r\n                })\r\n\r\n\r\n\r\n            })\r\n    }, [])\r\n\r\n\r\n\r\n    return state;\r\n}","export const getUserData = async () => {\r\n    const url = `https://api.github.com/users/fercho1`;\r\n    const resp = await fetch( url );\r\n    const data = await resp.json();\r\n    return data;\r\n\r\n\r\n    \r\n    \r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport const GridItem = ({ login, avatar_url, name, html_url, public_repos, type, following }) => {\r\n    return (\r\n\r\n        <div className=\"row mt-5 ml-2\">\r\n            <div className=\"col-4\">\r\n                <img\r\n                    src={avatar_url}\r\n                    alt={login}\r\n                    className=\"img-thumbnail rounded-circle animate__animated animate__fadeInLeft\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"col-8 animate__animated animate__fadeIn\">\r\n                <h3> {login} </h3>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\"> <b> Name: </b> {name} </li>\r\n                    <li className=\"list-group-item\"> <b> Url: </b> {html_url} </li>\r\n                    <li className=\"list-group-item\"> <b> Type: </b> {type} </li>\r\n                    <li className=\"list-group-item\"> <b> Following: </b> {following} </li>\r\n                </ul>\r\n                <br></br>\r\n                <NavLink\r\n                    activeClassName=\"active\"\r\n                    className=\"nav-item nav-link\"\r\n                    exact\r\n                    to=\"/repositories\"\r\n                >\r\n                    Repositories:   {public_repos}\r\n                </NavLink>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}","import React from 'react'\r\nimport { useFetchUserData } from '../hooks/useFetchUserData';\r\nimport { GridItem } from './GridItem';\r\n\r\nexport const UserScreen = () => {\r\n\r\n    const { data, loading } = useFetchUserData();\r\n\r\n    return (\r\n        <>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n\r\n            <div className=\"card-grid\">\r\n\r\n                <GridItem\r\n                    key={data.id}\r\n                    {...data}\r\n                />\r\n\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getUserData } from \"../helpers/getUserData\";\r\n\r\n\r\nexport const useFetchUserData = () => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getUserData()\r\n            .then(user => {\r\n\r\n\r\n\r\n                setState({\r\n                    data: user,\r\n                    loading: false\r\n                })\r\n\r\n\r\n\r\n            })\r\n    }, [])\r\n\r\n\r\n\r\n    return state;\r\n}","import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n            <div className=\"container-fluid\">\r\n                <Link\r\n                    className=\"navbar-brand\"\r\n                    to=\"/\"\r\n                >\r\n                    GithubApp\r\n                </Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            <NavLink\r\n                                activeClassName=\"active\"\r\n                                className=\"nav-item nav-link\"\r\n                                exact\r\n                                to=\"/user\"\r\n                            >\r\n                                User\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink\r\n                                activeClassName=\"active\"\r\n                                className=\"nav-item nav-link\"\r\n                                exact\r\n                                to=\"/repositories\"\r\n                            >\r\n                                Repositories\r\n                            </NavLink>\r\n                        </li>\r\n\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n\r\n    )\r\n}","import React from 'react'\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport { RepositoriesScreen } from '../components/RepositoriesScreen';\r\nimport { UserScreen } from '../components/UserScreen';\r\nimport { Navbar } from '../ui/Navbar';\r\n\r\nexport const AppRouter = () => {\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Navbar />\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={ UserScreen } />\r\n                    <Route exact path=\"/user\" component={ UserScreen } />\r\n                    <Route exact path=\"/repositories\" component={ RepositoriesScreen } />\r\n\r\n                    <Redirect to=\"/user\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\nexport const GithubApp = () => {\r\n    return (\r\n        <AppRouter />\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GithubApp } from './GithubApp';\n\n\nReactDOM.render(\n    <GithubApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}